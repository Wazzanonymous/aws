AWSTemplateFormatVersion: 2010-09-09
Description: RESOPS Activity 1 template. VPC with a Red Hat Linux instance in a public subnet

Parameters:

  AmazonLinux2AmiId: # Locate latest Amazon Linux 2 AMI from public parameter store
    Description: Get latest Amazon Linux 2 AMI from public parameter store
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

  VPCCIDR:
    Description: CIDR Block for VPC
    Type: String
    Default: 10.200.0.0/20
    AllowedValues:
      - 10.200.0.0/20

  PublicSubnet1Param:
    Description: Public Subnet 1
    Type: String
    Default: 10.200.0.0/24
    AllowedValues:
      - 10.200.0.0/24

  PrivateSubnet1Param:
    Description: Private Subnet 1
    Type: String
    Default: 10.200.2.0/23
    AllowedValues:
      - 10.200.2.0/23

  KeyName:
    Type: String
    Description: Keyname for the keypair that Qwiklab will use
    Default: lab-key-pair

Resources:

  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsHostnames: 'true'
      Tags:
        - Key: VPC
          Value: SysOps
        - Key: Name
          Value: Lab VPC

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    DependsOn: VPC

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    DependsOn:
      - VPC
      - InternetGateway
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1Param
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: Public Subnet 1

  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    DependsOn:
      - VPC
      - AttachGateway
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public Route Table

  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn:
      - VPC
      - PublicRouteTable
      - InternetGateway
      - AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - PublicRouteTable
      - PublicSubnet1
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    DependsOn: VPC
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1Param
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: Private Subnet 1

  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    DependsOn:
      - VPC
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Private Route Table 1

  PrivateRoute:
    Type: 'AWS::EC2::Route'
    DependsOn:
      - VPC
      - PrivateRouteTable
      - NATGateway
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway

  PrivateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - PrivateRouteTable
      - PrivateSubnet1
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  NATGateway:
    DependsOn: AttachGateway
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt
        - EIP
        - AllocationId
      SubnetId: !Ref PublicSubnet1

  EIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc

  LinuxInstance:
    Type: 'AWS::EC2::Instance'
    DependsOn:
      - VPC
      - LinuxInstanceSG
      - PublicSubnet1
    Properties:
      ImageId: !Ref AmazonLinux2AmiId
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      NetworkInterfaces:
        - DeviceIndex: '0'
          AssociatePublicIpAddress: 'true'
          SubnetId: !Ref PublicSubnet1
          GroupSet:
            - !Ref LinuxInstanceSG
      SourceDestCheck: 'false'
      Tags:
        - Key: Name
          Value: CLI Host
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum -y remove awscli
          yum -y update

  LinuxInstanceSG:
    Type: 'AWS::EC2::SecurityGroup'
    DependsOn: VPC
    Properties:
      GroupDescription: Security group for the CLI Host Linux instance
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Linux instance SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 0.0.0.0/0

  IAMUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: awsstudent
      LoginProfile:
        Password: passW0rd
        PasswordResetRequired: 'false'

  IAMPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    DependsOn: IAMUser
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'iam:get*'
              - 'iam:list*'
            Resource: '*'
      ManagedPolicyName: lab_policy
      Users:
        - awsstudent

  IAMUserAccessKey:
    Type: 'AWS::IAM::AccessKey'
    DependsOn: IAMUser
    Properties:
      Status: Active
      UserName: awsstudent

Outputs:

  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt
      - LinuxInstance
      - PublicIp

  AccessKey:
    Value: !Ref IAMUserAccessKey

  SecretKey:
    Value: !GetAtt
      - IAMUserAccessKey
      - SecretAccessKey
